# Generated by Django 3.2 on 2021-04-22 16:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import journal.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для группы', primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='Пожалуйста, введите название группы')),
                ('first_term', models.IntegerField(help_text='Пожалуйста, выберете первый семестр для группы')),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для предмета на семестр', primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для предмета', primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='Пожалуйста, введите название предмета')),
                ('specialties', models.ManyToManyField(to='journal.Specialty')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для предмета на семестр', primary_key=True, serialize=False)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(default=django.utils.timezone.now, help_text='Выберете дату начала')),
                ('end_date', models.DateField(default=django.utils.timezone.now, help_text='Выберете дату конца семестра')),
                ('isCurrentTerm', models.BooleanField(help_text='Это текущий семестр?')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для семестра', primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='Пожалуйста, введите название задания')),
                ('bref', models.TextField(blank=True, help_text='Пожалуйста, введите краткое описание задания', null=True)),
                ('worth', models.IntegerField(help_text='Пожалуйста, ввдеите ценность задания')),
                ('b_max', models.IntegerField(help_text='Пожалуйста, введите максимальный балл по заданию')),
                ('date_of_issue', models.DateField(help_text='Пожалуйста, выберете дату выдачи задания')),
                ('deadline', models.DateField(help_text='Пожалуйста, выберете крайнюю дату задания')),
                ('kind', models.TextField(choices=[('main', 'основная'), ('additional', 'доаолнительная')], help_text='Пожалуйста, выберете тип задания')),
                ('subject_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.subjectinstance')),
            ],
        ),
        migrations.AddField(
            model_name='subjectinstance',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.term'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для студента', primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='Пожалуйста, введите имя студента')),
                ('last_name', models.TextField(help_text='Пожалуйста, введите фамилию студента')),
                ('patronymic', models.TextField(blank=True, help_text='Пожалуйста, введите отчество студента(если есть)', null=True)),
                ('email', models.EmailField(blank=True, help_text='Пожалуйста, введите почту', max_length=254, null=True, validators=[journal.models.validateEmail])),
                ('password', models.TextField(blank=True, help_text='Пожалуйста, введите пароль', null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.group')),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для оценки студента', primary_key=True, serialize=False)),
                ('number', models.IntegerField(help_text='Пожалуйста, введите полученный балл студента за задание')),
                ('student', models.ForeignKey(help_text='Пожалуйста, выберете студента', on_delete=django.db.models.deletion.CASCADE, to='journal.student')),
                ('task', models.ForeignKey(help_text='Пожалуйста, выберете задание', on_delete=django.db.models.deletion.CASCADE, to='journal.task')),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный ID для преподователя', primary_key=True, serialize=False)),
                ('name', models.TextField(help_text='Пожалуйста, введите имя студента')),
                ('last_name', models.TextField(help_text='Пожалуйста, введите фамилию студента')),
                ('patronymic', models.TextField(blank=True, help_text='Пожалуйста, введите отчество студента(если есть)', null=True)),
                ('email', models.EmailField(blank=True, help_text='Пожалуйста, введите почту', max_length=254, null=True, validators=[journal.models.validateEmail])),
                ('password', models.TextField(blank=True, help_text='Пожалуйста, введите пароль', null=True)),
                ('subject_instances', models.ManyToManyField(to='journal.SubjectInstance')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='specialty',
            field=models.ForeignKey(help_text='Пожалуйста, выберете специальность группы', on_delete=django.db.models.deletion.CASCADE, to='journal.specialty'),
        ),
        migrations.AddField(
            model_name='group',
            name='terms',
            field=models.ManyToManyField(to='journal.Term'),
        ),
    ]
